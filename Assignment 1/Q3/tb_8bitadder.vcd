$date
	Fri Jun 03 01:24:23 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 8 ! out [7:0] $end
$var reg 8 " first [7:0] $end
$var reg 8 # second [7:0] $end
$scope module adder1 $end
$var wire 8 $ A [7:0] $end
$var wire 8 % B [7:0] $end
$var wire 8 & O [7:0] $end
$var wire 8 ' C [7:0] $end
$scope module fa1 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + cout $end
$var wire 1 , o $end
$upscope $end
$scope module fa2 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 o $end
$upscope $end
$scope module fa3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 o $end
$upscope $end
$scope module fa4 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; o $end
$upscope $end
$scope module fa5 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cin $end
$var wire 1 ? cout $end
$var wire 1 @ o $end
$upscope $end
$scope module fa6 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D cout $end
$var wire 1 E o $end
$upscope $end
$scope module fa7 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H cin $end
$var wire 1 I cout $end
$var wire 1 J o $end
$upscope $end
$scope module ha $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M carry $end
$var wire 1 N o $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 O i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 O
1N
0M
1L
0K
1J
0I
0H
1G
0F
0E
0D
0C
0B
0A
1@
0?
0>
0=
1<
0;
0:
09
08
07
06
05
04
03
02
11
00
0/
0.
1-
0,
0+
0*
0)
0(
b0 '
b10100101 &
b10000001 %
b100100 $
b10000001 #
b100100 "
b10100101 !
$end
#10
1/
1+
1E
0J
1*
11
16
b1101100 !
b1101100 &
0N
b11 '
1M
1)
1=
1B
0G
1K
0-
12
0<
b1100011 #
b1100011 %
b1001 "
b1001 $
b1 O
#20
01
0/
1;
0+
19
14
1,
16
15
0@
0E
b10011010 !
b10011010 &
1J
b1101 '
10
0)
1.
13
0=
0B
1G
1-
b10001101 #
b10001101 %
b1101 "
b1101 $
b10 O
#30
0H
0D
0C
0?
0/
06
0>
0+
04
0:
09
0*
1,
11
00
1;
0J
05
1@
1E
b1110111 !
b1110111 &
1N
b0 '
0M
0L
1)
0.
03
18
0G
02
1<
1A
b10010 #
b10010 %
b1100101 "
b1100101 $
b11 O
#40
1*
1,
16
0;
0@
0E
b1110 !
b1110 &
0N
b1 '
1M
1L
0)
1.
13
08
0-
0<
0A
b1101 #
b1101 %
b1 "
b1 $
b100 O
#50
1;
1J
19
1H
15
1D
0/
06
1@
0+
14
1>
1C
0*
1,
01
10
1:
1?
0E
b10110011 !
b10110011 &
1N
b1111100 '
0M
18
1=
0K
1(
1-
17
1<
1A
b111101 #
b111101 %
b1110110 "
b1110110 $
b101 O
#60
0J
0H
0D
1E
0C
0?
0>
1@
0,
b1111001 !
b1111001 &
16
0:
b10001100 '
1I
0L
08
0=
1G
1K
0(
12
07
1F
b10001100 #
b10001100 %
b11101101 "
b11101101 $
b110 O
#70
0C
09
0?
05
1@
1J
0>
1H
04
0:
1,
16
0E
1D
11
b11000000 '
00
b10111111 !
b10111111 &
1;
1)
03
1B
0-
17
b11000110 #
b11000110 %
b11111001 "
b11111001 $
b111 O
#80
0J
0H
1E
b10000000 '
0D
b1101111 !
b1101111 &
0;
0.
13
1=
0B
1-
02
07
0<
b10101010 #
b10101010 %
b11000101 "
b11000101 $
b1000 O
#90
1/
1+
0,
14
1H
1C
1*
11
10
16
1;
1E
1D
0J
1I
0@
1?
b1011100 !
b1011100 &
0N
b11100111 '
1M
1L
1.
03
18
1B
0G
1<
b1110111 #
b1110111 %
b11100101 "
b11100101 $
b1001 O
#100
b1010 O
